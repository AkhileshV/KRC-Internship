#-----------------------------------monday (15/01/2018)-----------
#(referred from : 'thinkpython' book)

#----------------------reading a file---------------

#open()--takes the file name(path) as the parameter and opens that file in read mode by default and returns the file object
#which is stored in fin
#fin.readline()--reads one line from the file pointed by fin,until a newline is encountered
#line.split()--splits the line into individual words.....
# (ref:https://stackoverflow.com/questions/16922214/reading-a-text-file-and-splitting-it-into-single-words-in-python)

#Exercise9.1.
# Write a program that reads words.txt and prints only the words with more than 20 characters (not counting whitespace).

#code----
# fin=open('F:\words.txt')
# line=fin.readline()
# for line in fin:
#     for word in line.split():
#         if(len(word)>20):
#           print(word)
# fin.close()
#
# #-----------------------writing to a file---------------
#
# fout=open('F:\words1.txt','w')  #----------replaces the file content and writes from the beginning
# line1='Thank you '
# fout.write(line1)
# fout.write('welcome')
#
# fout.close()

#------------------------filenames and paths---------------

#. os.getcwd returns the name of the current directory:

# import os
# cwd = os.getcwd()
# print (cwd)
#
# # To ﬁnd the absolute path to a ﬁle, you can use
# # os.path.abspath:
# print(os.path.abspath('words.txt'))

#---------------------------code to demonstrate certain file functions--------------
#os.path.exists checks whether a ﬁle or directory exists:
# example:- os.path.exists('memo.txt')

#, os.path.isdir checks whether it’s a directory:
#example : os.path.isdir('memo.txt')
# False
# >>> os.path.isdir('music')
#  True

#the following example “walks” through a directory(also called folder), prints the names of all the ﬁles,
#  and calls itself recursively on all the directories.
# import os
# def walk(dirname):
#     for name in os.listdir(dirname): # os.listdir(dirname) provides the file-list in that directory
#         path = os.path.join(dirname, name) #os.path.join takes a directory and a ﬁle name and
#                                            # joins them into a complete path.
#         if os.path.isfile(path): #---checks if 'path' is a file or not
#             print(path)
#         else:
#             walk(path)
#
#
# walk('C:') #----compulsorily should give the top most directory name------

#----------------------Databases----------

# import anydbm
# db = anydbm.open('captions.db', 'c') #The mode 'c' means that the database should be created if it doesn’t already exist.
# #  The result is a database object that can be used (for most operations) like a dictionary
#
# #assignment
# db['cleese.png'] = 'Photo of John Cleese doing a silly walk.'
# #closing the database
# db.close()
#--------------------------------------------------------------------------

# -----------------------Pickling-----------

#pickle.dumps takes an object as a parameter and returns a string representation (dumps is short for “dump string”):
#example:
# import pickle
# t = [1, 2, 3]
# print(pickle.dumps(t))

#unpickling ---reconstitutes the object
#eaxmple
# import pickle
# t1 = [1, 2, 3]
# s = pickle.dumps(t1)
# t2 = pickle.loads(s) #------reconstructs the object(here t=[1,2,3] list) from the string generated by pickling---
# print(t2)

#-----------------------Pickling and then unpickling has the same effect as copying the object.